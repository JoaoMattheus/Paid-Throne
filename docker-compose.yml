version: '3.8'

services:
  # Aplicação Spring Boot
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - DB_URL=jdbc:postgresql://db:5432/dbptk
      - DB_USERNAME=thorone
      - DB_PASSWORD=gA3ifLgwMwo8EN4aBR98AIGygEiVbkFN
      - SPRING_PROFILES_ACTIVE=prod
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/calculator/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Banco de dados PostgreSQL
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: dbptk
      POSTGRES_USER: thorone
      POSTGRES_PASSWORD: gA3ifLgwMwo8EN4aBR98AIGygEiVbkFN
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./src/main/resources/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thorone -d dbptk"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer para gerenciar o banco (opcional - pode remover em produção)
  adminer:
    image: adminer:4-standalone
    restart: unless-stopped
    ports:
      - "8081:8080"  # Mudei para 8081 para não conflitar com a aplicação
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  db_data:
    driver: local